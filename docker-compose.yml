services:
  postgres-tracker:
    container_name: postgres-tracker
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ndkhoalk97
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: transaction_tracker
    volumes:
      - postgres-tracker:/var/lib/postgresql/data
    networks:
      - postgres-tracker-network
    restart: unless-stopped

  postgres-authenticator:
    container_name: postgres-authenticator
    image: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ndkhoalk97
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: authenticator
    volumes:
      - postgres-auth:/var/lib/postgresql/data
    networks:
      - postgres-authenticator-network
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - postgres-tracker-network
      - postgres-authenticator-network
    restart: unless-stopped

  mongodb-reporter:
    image: mongo
    container_name: mongodb-reporter
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data
    networks:
      - mongodb_network
      - em-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8088:8081
    networks:
        - mongodb_network
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongodb-reporter

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9411:9411
    networks:
      - em-network

  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: ndkhoalk97
      RABBITMQ_DEFAULT_PASS: 123456
      RABBITMQ_DEFAULT_VHOST: /
    networks:
      - em-network

  eureka-server:
    image: ndkhoalk97/eureka-server
    container_name: eureka-server
    ports:
      - 8761:8761
    restart: unless-stopped
    depends_on:
      - zipkin
    networks:
      - em-network
    environment:
      SPRING_PROFILES_ACTIVE: docker

  api-gateway:
    image: ndkhoalk97/api-gateway
    container_name: api-gateway
    ports:
      - 8083:8083
    restart: unless-stopped
    depends_on:
      - eureka-server
      - zipkin
    networks:
      - em-network
    environment:
      SPRING_PROFILES_ACTIVE: docker

  authenticator:
    image: ndkhoalk97/authenticator
    container_name: authenticator
    ports:
      - 8082:8082
    restart: unless-stopped
    depends_on:
      - eureka-server
      - zipkin
      - postgres-authenticator
    networks:
      - em-network
      - postgres-authenticator-network
    environment:
      SPRING_PROFILES_ACTIVE: docker


  tracker:
    image: ndkhoalk97/tracker
    container_name: tracker
    ports:
      - 8080:8080
    restart: unless-stopped
    depends_on:
      - eureka-server
      - zipkin
      - rabbitmq
      - postgres-tracker
    networks:
      - em-network
      - postgres-tracker-network
    environment:
      SPRING_PROFILES_ACTIVE: docker

  reporter:
    image: ndkhoalk97/reporter
    container_name: reporter
    ports:
      - 8081:8081
    restart: unless-stopped
    depends_on:
      - eureka-server
      - zipkin
      - rabbitmq
      - mongodb-reporter
      - tracker
    networks:
      - em-network
      - mongodb_network
    environment:
      SPRING_PROFILES_ACTIVE: docker

networks:
  postgres-tracker-network:
    driver: bridge
  postgres-authenticator-network:
    driver: bridge
  mongodb_network:
    driver: bridge
  em-network:
    driver: bridge

volumes:
  postgres-auth:
  postgres-tracker:
  pgadmin:
  mongo-data:
